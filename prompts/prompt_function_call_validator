{
    "instructions": {
        "input_schema": {
            "code_line": "string (a line of code that potentially contains the function call or object usage)",
            "function_or_object_name": "string (the name of the function or object being used)",
            "file_path": "string (the file path or module from which the function or object is imported)",
            "language": "string (the programming language of the code, e.g., 'Python', 'JavaScript', 'C++')"
        },
        "output_schema": {
            "is_valid_usage": "boolean (true if the line is a valid usage of the function or object, false otherwise)",
            "status": "string ('valid' if it is a confirmed usage, 'no_match' if it does not match the function/object usage, 'invalid_input' if the input is not a valid line of code for analysis, 'insufficient_context' if there is not enough context to determine the validity)"
        },
        "task_description": "Your task is to determine if the given line of code is a valid usage (function call or object usage) of the specified function or object, based on the given function name and the function's file path. Consider the programming language provided when analyzing the code. If the line matches the usage of the function/object, set 'is_valid_usage' to true. If it does not match, set 'is_valid_usage' to false and set the status to 'no_match'. If the input is not a valid line of code for analysis, set the status to 'invalid_input'. If there is not enough context to determine if it is a valid usage, set the status to 'insufficient_context'. Return only the 'output_schema' as valid JSON."
    },
    "sample_input": {
        "code_line": "result = my_module.my_function(param1, param2)",
        "function_or_object_name": "my_function",
        "file_path": "src/my_module.py",
        "language": "Python"
    },
    "expected_output": {
        "is_valid_usage": true,
        "status": "valid"
    }
}
